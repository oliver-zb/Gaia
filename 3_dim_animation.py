import csvimport osimport timeitimport math as mimport numpy as npimport matplotlib.pyplot as pltfrom mpl_toolkits.mplot3d import Axes3Dfrom matplotlib import animationstart = timeit.default_timer()"load these data, to do this, these files have to be created with load_data.py"x = np.load('data/x.npy')y = np.load('data/y.npy')z = np.load('data/z.npy')q = np.load('data/q.npy')v_x = np.load('data/v_x.npy')v_y = np.load('data/v_y.npy')v_z = np.load('data/v_z.npy')v = np.load('data/v.npy')"animation of 3d velocities"fig = plt.figure()ax = Axes3D(fig)points, = ax.plot(x,y,z, linestyle='', marker='.',markersize=1.75)title = fig.suptitle('')def update_points(t,x,y,z,points):    title.set_text('{:d} * 100 years'.format(t))    new_x = x[:1000]+v_x[:1000]*t*100    new_y = y[:1000]+v_y[:1000]*t*100    new_z = z[:1000]+v_z[:1000]*t*100    points.set_data(new_x,new_y)    points.set_3d_properties(new_z, 'z')    return points,titleani=animation.FuncAnimation(fig, update_points, frames=300, interval=5, fargs=(x, y, z, points))"for saving the animation"#ani.save('f3D_1000_moving_stars.gif', writer='imagemagick',fps=1000/100)ax.set_xlabel("x [pc]")ax.set_ylabel("y [pc]")ax.set_zlabel('z [pc]')plt.show()print(len(x))stop = timeit.default_timer()print("calculation time:", round(stop - start),"s")